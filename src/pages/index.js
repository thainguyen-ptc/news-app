import React, { Fragment } from 'react';
import Head from 'next/head';
import InfiniteScroll from 'react-infinite-scroller';
import { isMobileOnly } from 'react-device-detect';

import newsFeed from 'mock-data/articles.json';
import { StyledContainer } from 'styles/pages/HomePage.style';

import withSSREnvironment from 'hocs/withSSREnvironment';
import MainLayout from 'layouts/MainLayout';
import NewsFeed from 'components/pages/home-page/NewsFeed/NewsFeed';

const MainHeader = () => <>This is a dummy header</>;
const MainFooter = () => <>This is a dummy footer</>;
const NewsFeedRenderer = withSSREnvironment(NewsFeed);

const isNewsFeedLoading = false,
  couldNewsFeedBeLoadedMore = false; // dummy
const loadMoreNewsFeed = () => {}; // dummy

function HomePage () {
  function handleLoadMoreNewsFeed () {
    if (isNewsFeedLoading) {
      return;
    }

    return loadMoreNewsFeed();
  }

  return <>
    <Head>
      <title>NextApp using NewsApi - Home</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <MainLayout header={ MainHeader } footer={ MainFooter }>
      <StyledContainer className="container">
        <section>
          <InfiniteScroll
            className="infinity-feeds-wrapper"
            pageStart={ 1 }
            threshold={ isMobileOnly ? 1200 : 1800 }
            loadMore={ handleLoadMoreNewsFeed }
            hasMore={ couldNewsFeedBeLoadedMore }
            loader={
              <Fragment key={ 0 }>Loading...</Fragment>
            }>
            <NewsFeedRenderer data={ newsFeed } />
          </InfiniteScroll>
        </section>
      </StyledContainer>
    </MainLayout>
  </>;
}

export default HomePage;
